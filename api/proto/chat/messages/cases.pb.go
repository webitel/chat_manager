// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.5
// source: chat/messages/cases.proto

package messages

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCaseChatHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Offset messages.
	Offset *GetCaseChatHistoryRequest_Offset `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// Number of messages to return.
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	// Search term: message.text
	Q string `protobuf:"bytes,5,opt,name=q,proto3" json:"q,omitempty"`
	// Fields to return into result.
	Fields []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	// Unique chat dialog
	ChatId string `protobuf:"bytes,6,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	// Contact identificator
	CaseId string `protobuf:"bytes,7,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
	// Includes the history of ONLY those dialogs
	// whose member channel(s) contain
	// a specified set of variables.
	Group map[string]string `protobuf:"bytes,8,rep,name=group,proto3" json:"group,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetCaseChatHistoryRequest) Reset() {
	*x = GetCaseChatHistoryRequest{}
	mi := &file_chat_messages_cases_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCaseChatHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaseChatHistoryRequest) ProtoMessage() {}

func (x *GetCaseChatHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_cases_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaseChatHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetCaseChatHistoryRequest) Descriptor() ([]byte, []int) {
	return file_chat_messages_cases_proto_rawDescGZIP(), []int{0}
}

func (x *GetCaseChatHistoryRequest) GetOffset() *GetCaseChatHistoryRequest_Offset {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *GetCaseChatHistoryRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetCaseChatHistoryRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCaseChatHistoryRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *GetCaseChatHistoryRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *GetCaseChatHistoryRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *GetCaseChatHistoryRequest) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

func (x *GetCaseChatHistoryRequest) GetGroup() map[string]string {
	if x != nil {
		return x.Group
	}
	return nil
}

// Offset options
type GetCaseChatHistoryRequest_Offset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Messages ONLY starting from the specified message ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Messages ONLY been sent before the specified epochtime(milli).
	Date int64 `protobuf:"varint,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetCaseChatHistoryRequest_Offset) Reset() {
	*x = GetCaseChatHistoryRequest_Offset{}
	mi := &file_chat_messages_cases_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCaseChatHistoryRequest_Offset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaseChatHistoryRequest_Offset) ProtoMessage() {}

func (x *GetCaseChatHistoryRequest_Offset) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_cases_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaseChatHistoryRequest_Offset.ProtoReflect.Descriptor instead.
func (*GetCaseChatHistoryRequest_Offset) Descriptor() ([]byte, []int) {
	return file_chat_messages_cases_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GetCaseChatHistoryRequest_Offset) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCaseChatHistoryRequest_Offset) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

var File_chat_messages_cases_proto protoreflect.FileDescriptor

var file_chat_messages_cases_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f,
	0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x77, 0x65, 0x62,
	0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x03, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x46, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x77, 0x65, 0x62, 0x69,
	0x74, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x1a, 0x2c, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xc2, 0x01, 0x0a,
	0x10, 0x43, 0x61, 0x73, 0x65, 0x73, 0x43, 0x68, 0x61, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x12, 0xad, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74,
	0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x52, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x4c, 0x5a, 0x20, 0x12, 0x1e, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f,
	0x7b, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x28, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f,
	0x7b, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x7b,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x68, 0x61, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_messages_cases_proto_rawDescOnce sync.Once
	file_chat_messages_cases_proto_rawDescData = file_chat_messages_cases_proto_rawDesc
)

func file_chat_messages_cases_proto_rawDescGZIP() []byte {
	file_chat_messages_cases_proto_rawDescOnce.Do(func() {
		file_chat_messages_cases_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_messages_cases_proto_rawDescData)
	})
	return file_chat_messages_cases_proto_rawDescData
}

var file_chat_messages_cases_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_chat_messages_cases_proto_goTypes = []any{
	(*GetCaseChatHistoryRequest)(nil),        // 0: webitel.chat.GetCaseChatHistoryRequest
	(*GetCaseChatHistoryRequest_Offset)(nil), // 1: webitel.chat.GetCaseChatHistoryRequest.Offset
	nil,                                      // 2: webitel.chat.GetCaseChatHistoryRequest.GroupEntry
	(*ChatMessages)(nil),                     // 3: webitel.chat.ChatMessages
}
var file_chat_messages_cases_proto_depIdxs = []int32{
	1, // 0: webitel.chat.GetCaseChatHistoryRequest.offset:type_name -> webitel.chat.GetCaseChatHistoryRequest.Offset
	2, // 1: webitel.chat.GetCaseChatHistoryRequest.group:type_name -> webitel.chat.GetCaseChatHistoryRequest.GroupEntry
	0, // 2: webitel.chat.CasesChatCatalog.GetCaseChatHistory:input_type -> webitel.chat.GetCaseChatHistoryRequest
	3, // 3: webitel.chat.CasesChatCatalog.GetCaseChatHistory:output_type -> webitel.chat.ChatMessages
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_chat_messages_cases_proto_init() }
func file_chat_messages_cases_proto_init() {
	if File_chat_messages_cases_proto != nil {
		return
	}
	file_chat_messages_history_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_messages_cases_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_messages_cases_proto_goTypes,
		DependencyIndexes: file_chat_messages_cases_proto_depIdxs,
		MessageInfos:      file_chat_messages_cases_proto_msgTypes,
	}.Build()
	File_chat_messages_cases_proto = out.File
	file_chat_messages_cases_proto_rawDesc = nil
	file_chat_messages_cases_proto_goTypes = nil
	file_chat_messages_cases_proto_depIdxs = nil
}
