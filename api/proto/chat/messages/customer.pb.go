// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v6.33.0
// source: chat/messages/customer.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Customer is external chat contact.
type Customer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Customer unique **ID**entifier.
	// Account **type**-specific string.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Customer account **type**.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Customer account **name**.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// [VIA] Text gateway associations.
	Via           []*Peer `protobuf:"bytes,4,rep,name=via,proto3" json:"via,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Customer) Reset() {
	*x = Customer{}
	mi := &file_chat_messages_customer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_customer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_chat_messages_customer_proto_rawDescGZIP(), []int{0}
}

func (x *Customer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Customer) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Customer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Customer) GetVia() []*Peer {
	if x != nil {
		return x.Via
	}
	return nil
}

// ChatCustomers dataset
type ChatCustomers struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Dataset page of Customer(s).
	Peers []*Customer `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	// List of unique text gateways, mentioned in peers. [VIA]
	Vias []*Peer `protobuf:"bytes,2,rep,name=vias,proto3" json:"vias,omitempty"`
	// Page number of results.
	Page int32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	// Next page is available ?
	Next          bool `protobuf:"varint,6,opt,name=next,proto3" json:"next,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatCustomers) Reset() {
	*x = ChatCustomers{}
	mi := &file_chat_messages_customer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatCustomers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCustomers) ProtoMessage() {}

func (x *ChatCustomers) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_customer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCustomers.ProtoReflect.Descriptor instead.
func (*ChatCustomers) Descriptor() ([]byte, []int) {
	return file_chat_messages_customer_proto_rawDescGZIP(), []int{1}
}

func (x *ChatCustomers) GetPeers() []*Customer {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *ChatCustomers) GetVias() []*Peer {
	if x != nil {
		return x.Vias
	}
	return nil
}

func (x *ChatCustomers) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ChatCustomers) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

type ChatCustomersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number to return. **default**: 1.
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Page records limit. **default**: 16.
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// Search term: peer{id,name}
	Q string `protobuf:"bytes,5,opt,name=q,proto3" json:"q,omitempty"`
	// Sort records by { fields } specification.
	Sort []string `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	// Fields [Q]uery to build result dataset record.
	Fields []string `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	// Set of unique contact **ID**entifier(s).
	Id []string `protobuf:"bytes,6,rep,name=id,proto3" json:"id,omitempty"`
	// The type of contact to filter.
	Type string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	// [VIA] Text gateway Contact provider.
	Via           *Peer `protobuf:"bytes,8,opt,name=via,proto3" json:"via,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatCustomersRequest) Reset() {
	*x = ChatCustomersRequest{}
	mi := &file_chat_messages_customer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatCustomersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCustomersRequest) ProtoMessage() {}

func (x *ChatCustomersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_customer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCustomersRequest.ProtoReflect.Descriptor instead.
func (*ChatCustomersRequest) Descriptor() ([]byte, []int) {
	return file_chat_messages_customer_proto_rawDescGZIP(), []int{2}
}

func (x *ChatCustomersRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ChatCustomersRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ChatCustomersRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *ChatCustomersRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ChatCustomersRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ChatCustomersRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ChatCustomersRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ChatCustomersRequest) GetVia() *Peer {
	if x != nil {
		return x.Via
	}
	return nil
}

var File_chat_messages_customer_proto protoreflect.FileDescriptor

var file_chat_messages_customer_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x1a, 0x18, 0x63, 0x68,
	0x61, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x70, 0x65, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x08, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x76, 0x69,
	0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65,
	0x6c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x03, 0x76, 0x69, 0x61,
	0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73,
	0x12, 0x26, 0x0a, 0x04, 0x76, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x04, 0x76, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x22, 0xc2, 0x01, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x03, 0x76, 0x69, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77,
	0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x03, 0x76, 0x69, 0x61, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_messages_customer_proto_rawDescOnce sync.Once
	file_chat_messages_customer_proto_rawDescData = file_chat_messages_customer_proto_rawDesc
)

func file_chat_messages_customer_proto_rawDescGZIP() []byte {
	file_chat_messages_customer_proto_rawDescOnce.Do(func() {
		file_chat_messages_customer_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_messages_customer_proto_rawDescData)
	})
	return file_chat_messages_customer_proto_rawDescData
}

var file_chat_messages_customer_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_chat_messages_customer_proto_goTypes = []any{
	(*Customer)(nil),             // 0: webitel.chat.Customer
	(*ChatCustomers)(nil),        // 1: webitel.chat.ChatCustomers
	(*ChatCustomersRequest)(nil), // 2: webitel.chat.ChatCustomersRequest
	(*Peer)(nil),                 // 3: webitel.chat.Peer
}
var file_chat_messages_customer_proto_depIdxs = []int32{
	3, // 0: webitel.chat.Customer.via:type_name -> webitel.chat.Peer
	0, // 1: webitel.chat.ChatCustomers.peers:type_name -> webitel.chat.Customer
	3, // 2: webitel.chat.ChatCustomers.vias:type_name -> webitel.chat.Peer
	3, // 3: webitel.chat.ChatCustomersRequest.via:type_name -> webitel.chat.Peer
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_chat_messages_customer_proto_init() }
func file_chat_messages_customer_proto_init() {
	if File_chat_messages_customer_proto != nil {
		return
	}
	file_chat_messages_peer_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_messages_customer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_messages_customer_proto_goTypes,
		DependencyIndexes: file_chat_messages_customer_proto_depIdxs,
		MessageInfos:      file_chat_messages_customer_proto_msgTypes,
	}.Build()
	File_chat_messages_customer_proto = out.File
	file_chat_messages_customer_proto_rawDesc = nil
	file_chat_messages_customer_proto_goTypes = nil
	file_chat_messages_customer_proto_depIdxs = nil
}
