syntax = "proto3";

package webitel.chat.server; 

option go_package = "github.com/matvoy/chat_server/api/proto/chat";

service ChatService {
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse) {}
  rpc StartConversation(StartConversationRequest) returns (StartConversationResponse) {}
  rpc CloseConversation(CloseConversationRequest) returns (CloseConversationResponse) {}
  rpc JoinConversation(JoinConversationRequest) returns (JoinConversationResponse) {}
  rpc LeaveConversation(LeaveConversationRequest) returns (LeaveConversationResponse) {}
  rpc InviteToConversation(InviteToConversationRequest) returns (InviteToConversationResponse) {}
  rpc DeclineInvitation(DeclineInvitationRequest) returns (DeclineInvitationResponse) {}
  rpc CheckSession(CheckSessionRequest) returns (CheckSessionResponse) {}
  rpc WaitMessage(WaitMessageRequest) returns (WaitMessageResponse) {}
  
  rpc GetConversationByID(GetConversationByIDRequest) returns (GetConversationByIDResponse) {}
  rpc GetConversations(GetConversationsRequest) returns (GetConversationsResponse) {}
  rpc GetProfiles(GetProfilesRequest) returns (GetProfilesResponse) {} 
  rpc GetProfileByID(GetProfileByIDRequest) returns (GetProfileByIDResponse) {}
  rpc CreateProfile(CreateProfileRequest) returns (CreateProfileResponse) {}
  rpc DeleteProfile(DeleteProfileRequest) returns (DeleteProfileResponse) {}
  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse) {}
  rpc GetHistoryMessages(GetHistoryMessagesRequest) returns (GetHistoryMessagesResponse) {}
}

message Error {
  string id = 1;
  string message = 2;
}

message Message {
  int64 id = 1;
  string type = 2;

  message File {
    int64 id = 1;
    string url = 2;
    string mime_type = 3;
  }


  oneof value {
      string text = 3;
      File file = 4;
  }
}

message Profile {
  int64 id = 1;
  string name = 2;
  string type = 3;
  int64 domain_id = 4;
  int64 schema_id = 5;
  map<string, string>  variables = 6;
}

message Conversation {
  string id = 1;
  string title = 2;
  int64 created_at = 3;
  int64 closed_at = 4;
  int64 updated_at = 5;
  int64 domain_id = 6;
  repeated Member members = 7;
  string self_channel_id = 8;
}

message Member {
  // string channel_id = 1;
  int64 user_id = 1;  
  string type = 2;
  string username = 3;
  bool internal = 4;
  int64 updated_at = 5;
  // string firstname = 6;
  // string lastname = 7;
  
}

message Channel {
  string id = 1;
  string type = 2;
  int64 created_at = 3;
  int64 closed_at = 4;
  bool internal = 5;
  int64 domain_id = 6;
  string connection = 7;
  int64 user_id = 8;  
}

message User {
  int64 user_id = 1;
  string type = 2;
  string connection = 3;
  bool internal = 4;
}


message HistoryMessage {
  int64 id = 1;
  // string channel_id = 2;
  // int64 conversation_id = 3;
  int64 from_user_id = 2;
  string from_user_type = 3;
  string text = 4;
  string type = 5;
  int64 created_at = 6;
  int64 updated_at = 7;
}

message WaitMessageRequest {
  string conversation_id = 1;
  string confirmation_id = 2;
}

message WaitMessageResponse {
  int64 timeout_sec = 1;
  repeated Message messages = 2;
  Error error = 3;
}

message CheckSessionRequest {
  string external_id = 1;
  int64 profile_id = 2;
  string username = 3;
}

message CheckSessionResponse {
  bool exists = 1;
  string channel_id = 2;
  int64 client_id = 3;
}

message SendMessageRequest {
  // User from = 1;
  Message message = 1;
  string channel_id = 2;
  bool from_flow = 3;
  string conversation_id = 4;
}

message SendMessageResponse {
}

message StartConversationRequest {
  User user = 1;
  int64 domain_id = 2;
  string username = 3;
}

message StartConversationResponse {
  string conversation_id = 1;
  string channel_id = 2;
}

message CloseConversationRequest {
  string conversation_id = 1;
  string closer_channel_id = 2;
  bool from_flow = 3;
  string cause = 4;
}

message CloseConversationResponse {
}

message JoinConversationRequest {
  string invite_id = 1;
  // User user = 1;
  // int64 conversation_id = 2;
}

message JoinConversationResponse {
  string channel_id = 1;
}

message LeaveConversationRequest {
  string channel_id = 1;
  string conversation_id = 2;
}

message LeaveConversationResponse {
}

message InviteToConversationRequest {
  User user = 1;
  string conversation_id = 2;
  string inviter_channel_id = 3;
  int64 timeout_sec = 4;
  int64 domain_id = 5;
}

message InviteToConversationResponse {
  string invite_id = 1;
}

message DeclineInvitationRequest {
  string invite_id = 1;
  int64 user_id = 2;
  string conversation_id = 3;
}

message DeclineInvitationResponse {
}

message GetProfilesRequest {
  // ----- Base Filters ---------------------------
  int64 id = 1;
  // ----- Object-Specific Filters ------------------
  string type = 2;
  int64 domain_id = 3;
  // ----- Search Options -------------------------
  repeated string fields = 4; // select: output (fields,...)
  repeated string sort = 5;   // select: order by (fields,...)
  int32 page = 6;             // select: offset {page}
  int32 size = 7;             // select: limit {size}
}

message GetProfilesResponse {
  int32 page = 1; // select: offset {page}
  bool next = 2; // search: has {next} page ?
  repeated Profile items = 3;
}

message GetProfileByIDRequest {
  int64 id = 1;
}

message GetProfileByIDResponse {
  Profile item = 1;
}

message CreateProfileRequest {
  Profile item = 1;
}

message CreateProfileResponse {
  Profile item = 1;
}

message DeleteProfileRequest {
  int64 id = 1;
}

message DeleteProfileResponse {
  Profile item = 1;
}

message UpdateProfileRequest {
  Profile item = 1; // body: modifications/changes
  repeated string fields = 2; // PATCH: partial update
}

message UpdateProfileResponse {
  Profile item = 1;
}

message GetConversationByIDRequest {
  string id = 1;
}

message GetConversationByIDResponse {
  Conversation item = 1;
}

message GetConversationsRequest {
  // ----- Base Filters ---------------------------
  string id = 1;
  // ----- Object-Specific Filters ------------------
  int64 domain_id = 3;
  int64 user_id = 4;
  bool active = 5;
  // ----- Search Options -------------------------
  repeated string fields = 6; // select: output (fields,...)
  repeated string sort = 7;   // select: order by (fields,...)
  int32 page = 8;             // select: offset {page}
  int32 size = 9;             // select: limit {size}
}

message GetConversationsResponse {
  int32 page = 1; // select: offset {page}
  bool next = 2; // search: has {next} page ?
  repeated Conversation items = 3;
}

message GetHistoryMessagesRequest {
  // ----- Base Filters ---------------------------
  int64 id = 1;
  // ----- Object-Specific Filters ------------------
  string conversation_id = 2;
  // ----- Search Options -------------------------
  repeated string fields = 4; // select: output (fields,...)
  repeated string sort = 5;   // select: order by (fields,...)
  int32 page = 6;             // select: offset {page}
  int32 size = 7;             // select: limit {size}
}

message GetHistoryMessagesResponse {
  int32 page = 1; // select: offset {page}
  bool next = 2; // search: has {next} page ?
  repeated HistoryMessage items = 3;
}