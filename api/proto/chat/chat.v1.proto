syntax = "proto3";

package webitel.chat.server; 

option go_package = "github.com/webitel/chat_manager/api/proto/chat";

// Account contact info
message Account {
    // Unique IDentifier
    int64  id = 1;
    // Channel communication type
    string channel = 2; // e.g.: user, flow, mobile, telegram, facebook, viber, skype ...
    // Channel specific contact string
    string contact = 3; // optional: channel specific contact string

    string first_name = 4; // optional
    string last_name = 5; // optional
    string username = 6; // required
}

// message Chat {
//     // Unique identifier for this chat.
//     string id = 1;
//     // Type of chat, can be either “private”, “group”, “supergroup” or “channel”
//     string type = 2;
//     // Optional. Title, for supergroups, channels and group chats
//     string title = 3;
//     // Optional. Username, for private chats, supergroups and channels if available
//     string username = 4;
//     // Account end-user for this chat channel.
//     // External (webitel.chat.bot) => external user contact
//     // Internal (workflow) => domain schema as @bot
//     // Internal (engine) => domain @user
//     Account account = 5;

//     string channel_id = 6;
//     int64 latest_id = 7;

//     int64 created_at = 10;
//     int64 updated_at = 11;
//     int64 closed_at = 11;
// }

// message Message {
  
//   int64 id = 1;    // required: update unique identifier (internal)
//   string type = 2; // optional: update message type, e.g.: text, file etc. TODO: REMOVE; use oneof field instead

//   message File {
//     int64 id = 1;
//     string url = 2;
//     string mime_type = 3;
//   }

//   oneof value {
//       string text = 3;
//       File file = 4;
//   }

//   map<string, string> variables = 5; // optional: extra context
// }

// message Conversation {
//   string id = 1;
//   string title = 2;
//   int64 created_at = 3;
//   int64 closed_at = 4;
//   int64 updated_at = 5;
//   int64 domain_id = 6;
//   repeated Member members = 7;
//   repeated HistoryMessage messages = 8;
// //  string self_channel_id = 9;
// //  int32 unread_messages = 10;
// }

// message Member {
//   string channel_id = 1;
//   int64 user_id = 2;
//   string type = 3;
//   string username = 4;
//   bool internal = 5;
//   int64 updated_at = 6;
//   // string firstname = 6;
//   // string lastname = 7;
  
// }

// message Channel {
//   string id = 1;
//   string type = 2;
//   int64 created_at = 3;
//   int64 closed_at = 4;
//   bool internal = 5;
//   int64 domain_id = 6;
//   string connection = 7;
//   int64 user_id = 8;  
// }



// message GetConversationsRequest {
//   // ----- Base Filters ---------------------------
//   string id = 1;
//   // ----- Object-Specific Filters ------------------
//   int64 domain_id = 3;
//   int64 user_id = 4;
//   bool active = 5;
//   // ----- Search Options -------------------------
//   repeated string fields = 6; // select: output (fields,...)
//   repeated string sort = 7;   // select: order by (fields,...)
//   int32 page = 8;             // select: offset {page}
//   int32 size = 9;             // select: limit {size}
//   int32 message_size = 10;
// }

// message GetConversationsResponse {
//   int32 page = 1; // select: offset {page}
//   bool next = 2; // search: has {next} page ?
//   repeated Conversation items = 3;
// }